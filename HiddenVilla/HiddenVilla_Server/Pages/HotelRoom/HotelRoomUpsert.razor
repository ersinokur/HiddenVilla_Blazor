@page "/hotel-room/create"
@page "/hotel-room/edit/{id:int}"

@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigateMan
@inject IJSRuntime JSRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title" text-info mb-3 ml-3>@Title</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator />
                    @*<ValidationSummary/>*@

                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelRoomModel.Name" />
                    </div>
                    <div class="form-group">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.Occupancy" />
                    </div><div class="form-group">
                        <label>Rate</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="()=>HotelRoomModel.RegularRate" />
                    </div>
                    <div class="form-group">
                        <label>Sq Ft.</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                    </div>
                    <div class="form-group">
                        <label>Details</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">Back to index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int? Id { get; set; }

    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();

    private string Title { get; set; } = "Create";

    protected async override Task OnInitializedAsync()
    {
        if (Id != null)
        {
            //updating
            Title = "Update";
            HotelRoomModel = await HotelRoomRepository.GetHotelRoom(Id.Value);
        }
        else
        {
            //create
            HotelRoomModel = new HotelRoomDTO();

        }
    }


    private async Task HandleHotelRoomUpsert()
    {

        try
        {
            var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);
            if (roomDetailsByName != null)
            {
                //there is duplicate room show error
                await JSRuntime.ToastrError("ShowSwal", "Room name already exists!");
                return;
            }


            if (HotelRoomModel.Id != 0 && Title == "Update")
            {
                var updatedRoomResult = await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                await JSRuntime.ToastrSuccess("ShowSwal", "hotel room updated succesfully");
            }
            else
            {
                var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
                await JSRuntime.ToastrSuccess("ShowSwal", "hotel room created succesfully");
            }
        }
        catch (Exception ex)
        {
            //log exceptions
        }

        //HotelRoomModel.Details = "Button clicked";




        NavigateMan.NavigateTo("hotel-room");


    }


}
